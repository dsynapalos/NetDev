---
- hosts: ALL_OS
  become: yes
  become_method: enable
  connection: network_cli
  ignore_errors: yes
  gather_facts: yes
  
  vars:
    - ansible_command_timeout: 120
    - config_folder: /tmp/configs
    - inventory_dict: {}
  
  tasks: 
    - debug: msg="{{ansible_facts}}"

    - name: assign ios vars
      set_fact:
        platform: "{{ ansible_facts.net_model }}"
        hostname: "{{ ansible_facts.net_hostname }}"
      when: ansible_facts.net_system == 'ios'

    - name: assign iosxr vars
      set_fact:
        platform: "{{ ansible_facts.net_system }}-{{ ansible_facts.net_version }}"
        hostname: "{{ ansible_facts.net_config | regex_search('hostname (.*)\\n') | regex_replace('hostname ') }}"
      when: ansible_facts.net_system == 'iosxr'

    - name: assign nxos vars
      set_fact:
        platform: "{{ ansible_facts.net_platform }}"
        hostname: "{{ ansible_facts.net_hostname }}"
      when: ansible_facts.net_system == 'nxos'
    
    - name: add platform to dicts keys
      set_fact:
        inventory_dict: "{ {{platform}}: {{hostname}} } "
        
    - name: ios backup
      cli_config:
        backup: yes
        backup_options:
          filename: "{{ hostname }}"
          dir_path: "{{ config_folder }}/{{ platform }}"
          
    - debug: msg="{{inventory_dict}}"
