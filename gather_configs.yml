---
- hosts: ALL_OS
  become: yes
  become_method: enable
  connection: network_cli
  ignore_errors: yes
  gather_facts: yes
  
  vars:
    - ansible_command_timeout: 120
    - config_folder: /tmp/configs
  
  tasks: 
    - debug: msg="{{ansible_facts}}"
    - name: Enforce inventory
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: '^[all_hosts:children]$'
        line: '[all_hosts:children]'
        create: yes
      delegate_to: localhost
    
    - name: Conform ios networking type group
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: "^{{ ansible_facts.net_model }}$"
        insertafter: "[all_hosts:children]"
        line: "{{ ansible_facts.net_model }}"
      delegate_to: localhost
      when: ansible_facts.net_system == 'ios'

    - name: Conform iosxr networking type group
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: "^{{ ansible_facts.net_system }}-{{ ansible_facts.net_version }}$"
        insertafter: "[all_hosts:children]"
        line: "{{ ansible_facts.net_system }}-{{ ansible_facts.net_version }}"
      delegate_to: localhost
      when: ansible_facts.net_system == 'iosxr'

    - name: Conform nxos networking type group
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: "^{{ ansible_facts.net_platform }}$"
        insertafter: "[all_hosts:children]"
        line: "{{ ansible_facts.net_platform }}"
      delegate_to: localhost
      when: ansible_facts.net_system == 'nxos'
        
    - name: Conform ios networking type object
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: "^[{{ ansible_facts.net_model }}]$"
        insertafter: "{{ ansible_facts.net_model }}"
        line: "[{{ ansible_facts.net_model }}]"
      delegate_to: localhost
      when: ansible_facts.net_system == 'ios'

    - name: Conform iosxr networking type object
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: "^[{{ ansible_facts.net_system }}-{{ ansible_facts.net_version }}]$"
        insertafter: "{{ ansible_facts.net_system }}-{{ ansible_facts.net_version }}"
        line: "[{{ ansible_facts.net_system }}-{{ ansible_facts.net_version }}]"
      delegate_to: localhost
      when: ansible_facts.net_system == 'iosxr'

    - name: Conform nxos networking type object
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: "^[{{ ansible_facts.net_platform }}]$"
        insertafter: "{{ ansible_facts.net_platform }}"
        line: "[{{ ansible_facts.net_platform }}]""
      delegate_to: localhost
      when: ansible_facts.net_system == 'nxos'

    - name: Update ios inventory
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: "^{{ ansible_facts.net_hostname }}.*$"
        insertafter: "[{{ ansible_facts.net_model }}]"
        line: "{{ ansible_facts.net_hostname }} ansible_host={{ ansible_host }} ansible_ssh_port={{ ansible_ssh_port }}"
      delegate_to: localhost
      when: ansible_facts.net_system == 'ios'

    - name: Update iosxr inventory
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: "^{{ ansible_fact.net_config | regex_search('\\nhostname (.*)\\n') }}.*$"
        insertafter: "[{{ ansible_facts.net_system }}-{{ ansible_facts.net_version }}]"
        line: "{{ ansible_fact.net_config | regex_search('\\nhostname (.*)\\n') }} ansible_host={{ ansible_host }} ansible_ssh_port={{ ansible_ssh_port }}"
      delegate_to: localhost
      when: ansible_facts.net_system == 'iosxr'

    - name: Update nxos inventory
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: '^{{ ansible_facts.net_hostname }}.*$'
        insertafter: '[{{ ansible_facts.net_platform }}]'
        line: "{{ ansible_facts.net_hostname }} ansible_host={{ ansible_host }} ansible_ssh_port={{ ansible_ssh_port }}"
      delegate_to: localhost
      when: ansible_facts.net_system == 'nxos'
        
    - name: ios backup
      ios_config:
        backup: yes
        backup_options:
          filename: "{{ ansible_facts.net_hostname }}"
          dir_path: "{{ config_folder }}/{{ ansible_facts.net_system }}-{{ ansible_facts.net_version }}"
      when: ansible_facts.net_system == 'ios'
      
    - name: iosxr backup
      iosxr_config:
        backup: yes
        backup_options:
          filename: "{{ ansible_fact.net_config | regex_search('\\nhostname (.*)\\n') }}"
          dir_path: "{{ config_folder }}/{{ ansible_facts.net_model }}"
      when: ansible_facts.net_system == 'iosxr'
      
    - name: nxos backup
      nxos_config:
        backup: yes
        backup_options:
          filename: "{{ ansible_facts.net_hostname }}"
          dir_path: "{{ config_folder }}/{{ ansible_facts.net_platform }}"
      when: ansible_facts.net_system == 'nxos'