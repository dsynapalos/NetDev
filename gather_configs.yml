---
- hosts: ALL_OS
  become: yes
  become_method: enable
  connection: network_cli
  gather_facts: yes
  
  vars:
    - config_folder: /tmp/configs
  
  tasks: 
    - name: Enforce inventory
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: '^[all_hosts:children]$'
        line: '[all_hosts:children]'
        create: yes
      delegate_to: localhost
    
    - name: Conform networking type group
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: '^{{ ansible_facts.net_model }}$'
        insertafter: '[all_hosts:children]'
        line: '{{ ansible_facts.net_model }}'
      delegate_to: localhost
        
    - name: Conform networking type object
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: '^[{{ ansible_facts.net_model }}]$'
        insertafter: '{{ ansible_facts.net_model }}'
        line: '[{{ ansible_facts.net_model }}]'
      delegate_to: localhost
        
    - name: Update inventory
      lineinfile:
        path: "{{ config_folder }}/ansible_managed_inventory"
        regexp: '^{{ ansible_facts.net_hostname }}.*$'
        insertafter: '[{{ ansible_facts.net_model }}]'
        line: '{{ ansible_facts.net_hostname }} ansible_host={{ ansible_host }} ansible_ssh_port={{ ansible_ssh_port }}'
      delegate_to: localhost
        
    - name: configurable backup path
      ios_config:
        backup: yes
        backup_options:
          filename: "{{ ansible_facts.net_hostname }}"
          dir_path: "{{ config_folder }}/{{ ansible_facts.net_model }}"
      when: ansible_network_os == 'ios'
      
    - name: configurable backup path
      iosxr_config:
        backup: yes
        backup_options:
          filename: "{{ ansible_facts.net_hostname }}"
          dir_path: "{{ config_folder }}/{{ ansible_facts.net_model }}"
      when: ansible_network_os == 'iosxr'
      
    - name: configurable backup path
      nxos_config:
        backup: yes
        backup_options:
          filename: "{{ ansible_facts.net_hostname }}"
          dir_path: "{{ config_folder }}/{{ ansible_facts.net_model }}"
      when: ansible_network_os == 'nxos'