image: ubuntu:18.04

stages:
  - vpn_connect
  
variables:
  ANSIBLE_HOST_KEY_CHECKING: "False"
  
before_script:
  - apt-get update -y
  - apt-get upgrade -y
  - apt-get install -y python3 python3-pip openconnect iputils-ping procps
  - pip3 install ansible paramiko


Connect to Cisco Sandbox with Cookie:
  stage: vpn_connect
  script:
    - cookie=$(cat Cookie)
    - openconnect -b -v --user=$VPN_USER -q --cookie=$cookie devnetsandbox-us-sjc.cisco.com:$VPN_PORT --printcookie > Cookie
    - ping $CSR1000V_HOST -c 4
    - touch inventory
    - echo "CSR1000V ansible_host=${CSR1000V_HOST}" > inventory
    - ansible-playbook test_playbook -i inventory -e "CSR1000V_HOST=${CSR1000V_HOST} CSR1000V_USER=${CSR1000V_USER} CSR1000V_PASS=${CSR1000V_PASS}"
    - cat /tempfile
  cache:
    paths:
      - Cookie
  artifacts:
    paths:
      - inventory
  allow_failure: true
      
Connect to Cisco Sandbox with Password:
  stage: vpn_connect
  script:
    - echo $VPN_PASS | openconnect -b -v --user=$VPN_USER -q --passwd-on-stdin devnetsandbox-us-sjc.cisco.com:$VPN_PORT --printcookie > Cookie
    - ping $CSR1000V_HOST -c 4
    - touch inventory
    - echo "CSR1000V ansible_host=${CSR1000V_HOST}" > inventory
    - ansible-playbook test_playbook -i inventory -e "CSR1000V_HOST=${CSR1000V_HOST} CSR1000V_USER=${CSR1000V_USER} CSR1000V_PASS=${CSR1000V_PASS}"
    - cat /tempfile
  cache:
    paths:
      - Cookie
  artifacts:
    paths:
      - inventory
  when: on_failure
      
after_script:
 #- cat $OC_PID
 #- pkill -2 -e -F $OC_PID